{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\TrackWorker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix Leaflet's missing marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst TrackWorker = ({\n  userLocation,\n  workerId\n}) => {\n  _s();\n  const [workerLocation, setWorkerLocation] = useState(null);\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/workers/${workerId}/location`);\n        const data = await res.json();\n\n        // Ensure data is in the format: { latitude: ..., longitude: ... }\n        if (data.latitude && data.longitude) {\n          setWorkerLocation([data.latitude, data.longitude]);\n        }\n      } catch (err) {\n        console.error('Error fetching worker location:', err);\n      }\n    };\n    fetchLocation(); // fetch immediately\n    const interval = setInterval(fetchLocation, 5000); // fetch every 5 seconds\n\n    return () => clearInterval(interval); // clean up on unmount\n  }, [workerId]);\n  if (!userLocation || !workerLocation) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%',\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: userLocation,\n      zoom: 13,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Your Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: workerLocation,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Worker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [userLocation, workerLocation],\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackWorker, \"z1iSkTzngZT5HR1q/QHaHvvz0I4=\");\n_c = TrackWorker;\nexport default TrackWorker;\nvar _c;\n$RefreshReg$(_c, \"TrackWorker\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Polyline","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","TrackWorker","userLocation","workerId","_s","workerLocation","setWorkerLocation","fetchLocation","res","fetch","data","json","latitude","longitude","err","console","error","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","marginTop","center","zoom","url","position","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/TrackWorker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Polyline,\r\n  Popup,\r\n} from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix Leaflet's missing marker icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl:\r\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl:\r\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst TrackWorker = ({ userLocation, workerId }) => {\r\n  const [workerLocation, setWorkerLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLocation = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `http://localhost:5000/api/workers/${workerId}/location`\r\n        );\r\n        const data = await res.json();\r\n\r\n        // Ensure data is in the format: { latitude: ..., longitude: ... }\r\n        if (data.latitude && data.longitude) {\r\n          setWorkerLocation([data.latitude, data.longitude]);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching worker location:', err);\r\n      }\r\n    };\r\n\r\n    fetchLocation(); // fetch immediately\r\n    const interval = setInterval(fetchLocation, 5000); // fetch every 5 seconds\r\n\r\n    return () => clearInterval(interval); // clean up on unmount\r\n  }, [workerId]);\r\n\r\n  if (!userLocation || !workerLocation) {\r\n    return <p>Loading map...</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: '400px', width: '100%', marginTop: '20px' }}>\r\n      <MapContainer center={userLocation} zoom={13} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <Marker position={userLocation}>\r\n          <Popup>Your Home</Popup>\r\n        </Marker>\r\n        <Marker position={workerLocation}>\r\n          <Popup>Worker</Popup>\r\n        </Marker>\r\n        <Polyline positions={[userLocation, workerLocation]} color=\"blue\" />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackWorker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}