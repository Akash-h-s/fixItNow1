{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  selectedWorker\n}) => {\n  _s();\n  const [newMessage, setNewMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async () => {\n    // ✅ Get logged-in user from localStorage\n    const loggedInUser = JSON.parse(localStorage.getItem('user'));\n    const senderId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id;\n    if (!senderId) {\n      console.error('❌ Sender ID is undefined');\n      return;\n    }\n    const message = {\n      senderId,\n      receiverId: selectedWorker._id,\n      content: newMessage\n    };\n    try {\n      const res = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(message)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        console.log('✅ Message sent:', data);\n        setMessages(prev => [...prev, data]);\n        setNewMessage('');\n      } else {\n        console.error('❌ Failed to send message:', data);\n      }\n    } catch (err) {\n      console.error('❌ Error sending message:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"ClWnINnX/twmwKfP+EPjPMDl/zY=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Message","selectedWorker","_s","newMessage","setNewMessage","messages","setMessages","handleSendMessage","loggedInUser","JSON","parse","localStorage","getItem","senderId","_id","console","error","message","receiverId","content","res","fetch","method","headers","body","stringify","data","json","ok","log","prev","err","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Message = ({ selectedWorker }) => {\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSendMessage = async () => {\r\n    // ✅ Get logged-in user from localStorage\r\n    const loggedInUser = JSON.parse(localStorage.getItem('user'));\r\n    const senderId = loggedInUser?._id;\r\n\r\n    if (!senderId) {\r\n      console.error('❌ Sender ID is undefined');\r\n      return;\r\n    }\r\n\r\n    const message = {\r\n      senderId,\r\n      receiverId: selectedWorker._id,\r\n      content: newMessage,\r\n    };\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/messages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(message),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        console.log('✅ Message sent:', data);\r\n        setMessages((prev) => [...prev, data]);\r\n        setNewMessage('');\r\n      } else {\r\n        console.error('❌ Failed to send message:', data);\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Error sending message:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n        placeholder=\"Type your message\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7D,MAAMC,QAAQ,GAAGL,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,GAAG;IAElC,IAAI,CAACD,QAAQ,EAAE;MACbE,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MACzC;IACF;IAEA,MAAMC,OAAO,GAAG;MACdJ,QAAQ;MACRK,UAAU,EAAEjB,cAAc,CAACa,GAAG;MAC9BK,OAAO,EAAEhB;IACX,CAAC;IAED,IAAI;MACF,MAAMiB,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEf,IAAI,CAACgB,SAAS,CAACR,OAAO;MAC9B,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MAE7B,IAAIP,GAAG,CAACQ,EAAE,EAAE;QACVb,OAAO,CAACc,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAC;QACpCpB,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,IAAI,CAAC,CAAC;QACtCtB,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,MAAM;QACLW,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEU,IAAI,CAAC;MAClD;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZhB,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEe,GAAG,CAAC;IAChD;EACF,CAAC;EAED,oBACEhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MACEkC,KAAK,EAAE9B,UAAW;MAClB+B,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF1C,OAAA;MAAQ2C,OAAO,EAAEnC,iBAAkB;MAAAyB,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACvC,EAAA,CAnDIF,OAAO;AAAA2C,EAAA,GAAP3C,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}