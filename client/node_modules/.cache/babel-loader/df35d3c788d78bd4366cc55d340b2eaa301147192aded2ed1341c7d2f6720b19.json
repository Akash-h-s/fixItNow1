{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  receiverId,\n  onClose\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('');\n\n  // ✅ Fetch senderId from backend using email in localStorage\n  useEffect(() => {\n    const fetchSenderId = async () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n      if (user !== null && user !== void 0 && user.email) {\n        try {\n          const res = await axios.get(`http://localhost:5000/api/users/email/${user.email}`);\n          setSenderId(res.data._id);\n        } catch (err) {\n          var _err$response;\n          console.error('❌ Failed to fetch sender ID:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        }\n      }\n    };\n    fetchSenderId();\n  }, []);\n  const sendMessage = async () => {\n    if (!content.trim()) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/messages', {\n        senderId,\n        receiverId,\n        content\n      });\n      setStatus('✅ Message sent!');\n      setContent('');\n    } catch (error) {\n      var _error$response;\n      console.error('❌ Failed to send message:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setStatus('❌ Failed to send message.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type your message...\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"0RTLtJWUc2jtsforYGPUN3D1uEc=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Message","receiverId","onClose","_s","content","setContent","senderId","setSenderId","status","setStatus","fetchSenderId","user","JSON","parse","localStorage","getItem","email","res","get","data","_id","err","_err$response","console","error","response","message","sendMessage","trim","post","_error$response","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Message = ({ receiverId, onClose }) => {\r\n  const [content, setContent] = useState('');\r\n  const [senderId, setSenderId] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  // ✅ Fetch senderId from backend using email in localStorage\r\n  useEffect(() => {\r\n    const fetchSenderId = async () => {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n      if (user?.email) {\r\n        try {\r\n          const res = await axios.get(`http://localhost:5000/api/users/email/${user.email}`);\r\n          setSenderId(res.data._id);\r\n        } catch (err) {\r\n          console.error('❌ Failed to fetch sender ID:', err.response?.data || err.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchSenderId();\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!content.trim()) return;\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/messages', {\r\n        senderId,\r\n        receiverId,\r\n        content,\r\n      });\r\n\r\n      setStatus('✅ Message sent!');\r\n      setContent('');\r\n    } catch (error) {\r\n      console.error('❌ Failed to send message:', error.response?.data || error.message);\r\n      setStatus('❌ Failed to send message.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-popup\">\r\n      <textarea\r\n        placeholder=\"Type your message...\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <button onClick={onClose}>Close</button>\r\n      <p>{status}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}