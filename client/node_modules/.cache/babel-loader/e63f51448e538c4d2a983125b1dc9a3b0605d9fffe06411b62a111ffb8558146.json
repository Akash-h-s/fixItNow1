{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\TrackWorker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix leaflet icon issue with webpack\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst TrackWorker = () => {\n  _s();\n  const {\n    workerId\n  } = useParams();\n  const [worker, setWorker] = useState(null);\n  const [coords, setCoords] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Utility function to geocode address if needed\n  const fetchCoordsFromAddress = async address => {\n    try {\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.length > 0) {\n        return {\n          lat: parseFloat(data[0].lat),\n          lng: parseFloat(data[0].lon)\n        };\n      } else {\n        return null;\n      }\n    } catch {\n      return null;\n    }\n  };\n  useEffect(() => {\n    const fetchWorker = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/workers/${workerId}`);\n        if (!res.ok) {\n          throw new Error('Worker not found');\n        }\n        const data = await res.json();\n        setWorker(data);\n\n        // Use latitude/longitude if available, else geocode address/location\n        if (data.latitude && data.longitude) {\n          setCoords({\n            lat: data.latitude,\n            lng: data.longitude\n          });\n        } else if (data.location || data.address) {\n          const address = data.location || data.address;\n          const geoCoords = await fetchCoordsFromAddress(address);\n          if (geoCoords) setCoords(geoCoords);else setError('Unable to find location coordinates');\n        } else {\n          setError('No location info for this worker');\n        }\n      } catch (err) {\n        setError(err.message || 'Failed to fetch worker');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWorker();\n  }, [workerId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading worker location...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Track Worker: \", worker === null || worker === void 0 ? void 0 : worker.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"\\u2190 Back to Workers List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), coords ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [coords.lat, coords.lng],\n      zoom: 15,\n      style: {\n        height: '500px',\n        width: '100%',\n        marginTop: '1rem',\n        borderRadius: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a>\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [coords.lat, coords.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [worker.name, \"'s Location\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), worker.location || worker.address || 'Unknown Address']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Coordinates not available for this worker.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackWorker, \"faIqKOb+x84mFHP4faxGViZLK6A=\", false, function () {\n  return [useParams];\n});\n_c = TrackWorker;\nexport default TrackWorker;\nvar _c;\n$RefreshReg$(_c, \"TrackWorker\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","TrackWorker","_s","workerId","worker","setWorker","coords","setCoords","loading","setLoading","error","setError","fetchCoordsFromAddress","address","url","encodeURIComponent","response","fetch","data","json","length","lat","parseFloat","lng","lon","fetchWorker","res","ok","Error","latitude","longitude","location","geoCoords","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","name","to","center","zoom","height","width","marginTop","borderRadius","attribution","position","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/TrackWorker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix leaflet icon issue with webpack\r\nimport L from 'leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl:\r\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl:\r\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl:\r\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst TrackWorker = () => {\r\n  const { workerId } = useParams();\r\n  const [worker, setWorker] = useState(null);\r\n  const [coords, setCoords] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Utility function to geocode address if needed\r\n  const fetchCoordsFromAddress = async (address) => {\r\n    try {\r\n      const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data.length > 0) {\r\n        return { lat: parseFloat(data[0].lat), lng: parseFloat(data[0].lon) };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchWorker = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/workers/${workerId}`);\r\n        if (!res.ok) {\r\n          throw new Error('Worker not found');\r\n        }\r\n        const data = await res.json();\r\n        setWorker(data);\r\n\r\n        // Use latitude/longitude if available, else geocode address/location\r\n        if (data.latitude && data.longitude) {\r\n          setCoords({ lat: data.latitude, lng: data.longitude });\r\n        } else if (data.location || data.address) {\r\n          const address = data.location || data.address;\r\n          const geoCoords = await fetchCoordsFromAddress(address);\r\n          if (geoCoords) setCoords(geoCoords);\r\n          else setError('Unable to find location coordinates');\r\n        } else {\r\n          setError('No location info for this worker');\r\n        }\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to fetch worker');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWorker();\r\n  }, [workerId]);\r\n\r\n  if (loading) return <p>Loading worker location...</p>;\r\n  if (error) return <p style={{ color: 'red' }}>{error}</p>;\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h2>Track Worker: {worker?.name}</h2>\r\n      <Link to=\"/\">‚Üê Back to Workers List</Link>\r\n\r\n      {coords ? (\r\n        <MapContainer\r\n          center={[coords.lat, coords.lng]}\r\n          zoom={15}\r\n          style={{ height: '500px', width: '100%', marginTop: '1rem', borderRadius: '12px' }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a>'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker position={[coords.lat, coords.lng]}>\r\n            <Popup>\r\n              {worker.name}'s Location\r\n              <br />\r\n              {worker.location || worker.address || 'Unknown Address'}\r\n            </Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      ) : (\r\n        <p>Coordinates not available for this worker.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackWorker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}