{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\TrackWorker.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix marker icon issue in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst TrackWorker = ({\n  userLocation,\n  workerId\n}) => {\n  _s();\n  const [workerLocation, setWorkerLocation] = useState(null);\n  useEffect(() => {\n    const fetchWorkerLocation = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/workers/${workerId}`);\n        const data = await res.json();\n\n        // You must have latitude and longitude fields in worker schema\n        if (data.latitude && data.longitude) {\n          setWorkerLocation([data.latitude, data.longitude]);\n        } else {\n          console.error('Worker coordinates not found.');\n        }\n      } catch (err) {\n        console.error('Error fetching worker location:', err);\n      }\n    };\n    fetchWorkerLocation();\n  }, [workerId]);\n  if (!userLocation || !workerLocation) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 48\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: userLocation,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: workerLocation,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackWorker, \"z1iSkTzngZT5HR1q/QHaHvvz0I4=\");\n_c = TrackWorker;\nexport default TrackWorker;\nvar _c;\n$RefreshReg$(_c, \"TrackWorker\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","TrackWorker","userLocation","workerId","_s","workerLocation","setWorkerLocation","fetchWorkerLocation","res","fetch","data","json","latitude","longitude","console","error","err","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","height","width","url","position","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/TrackWorker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix marker icon issue in Leaflet with React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst TrackWorker = ({ userLocation, workerId }) => {\r\n  const [workerLocation, setWorkerLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWorkerLocation = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/workers/${workerId}`);\r\n        const data = await res.json();\r\n\r\n        // You must have latitude and longitude fields in worker schema\r\n        if (data.latitude && data.longitude) {\r\n          setWorkerLocation([data.latitude, data.longitude]);\r\n        } else {\r\n          console.error('Worker coordinates not found.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching worker location:', err);\r\n      }\r\n    };\r\n\r\n    fetchWorkerLocation();\r\n  }, [workerId]);\r\n\r\n  if (!userLocation || !workerLocation) return <p style={{ textAlign: 'center' }}>Loading map...</p>;\r\n\r\n  return (\r\n    <MapContainer center={userLocation} zoom={13} style={{ height: '400px', width: '100%' }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={userLocation}>\r\n        <Popup>You</Popup>\r\n      </Marker>\r\n      <Marker position={workerLocation}>\r\n        <Popup>Worker</Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default TrackWorker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}