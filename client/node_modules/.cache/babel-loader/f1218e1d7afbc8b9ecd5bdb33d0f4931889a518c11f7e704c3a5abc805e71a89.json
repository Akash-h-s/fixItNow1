{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  selectedWorker\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.email) {\n      setUserEmail(user.email);\n    }\n  }, []);\n  const sendMessage = async () => {\n    if (!userEmail || !(selectedWorker !== null && selectedWorker !== void 0 && selectedWorker.email) || !message.trim()) {\n      alert('Sender, receiver, or message is missing');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/messages/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender: userEmail,\n          receiver: selectedWorker.email,\n          content: message\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert('Message sent successfully');\n        setMessage('');\n      } else {\n        alert(data.error || 'Failed to send message');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      alert('An error occurred while sending the message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Send a Message to \", selectedWorker === null || selectedWorker === void 0 ? void 0 : selectedWorker.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      placeholder: \"Type your message here...\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      style: {\n        display: 'block',\n        width: '100%',\n        padding: '10px',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"fxqNdzAMv7NeZHD0WiSpdNB+4RA=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Message","selectedWorker","_s","message","setMessage","userEmail","setUserEmail","user","JSON","parse","localStorage","getItem","email","sendMessage","trim","alert","res","fetch","method","headers","body","stringify","sender","receiver","content","data","json","ok","error","console","style","marginTop","children","fullName","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","placeholder","value","onChange","e","target","display","width","padding","marginBottom","onClick","backgroundColor","color","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Message = ({ selectedWorker }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.email) {\r\n      setUserEmail(user.email);\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!userEmail || !selectedWorker?.email || !message.trim()) {\r\n      alert('Sender, receiver, or message is missing');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/messages/send', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          sender: userEmail,\r\n          receiver: selectedWorker.email,\r\n          content: message,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        alert('Message sent successfully');\r\n        setMessage('');\r\n      } else {\r\n        alert(data.error || 'Failed to send message');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      alert('An error occurred while sending the message');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <h3>Send a Message to {selectedWorker?.fullName}</h3>\r\n      <textarea\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        placeholder=\"Type your message here...\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        style={{ display: 'block', width: '100%', padding: '10px', marginBottom: '10px' }}\r\n      />\r\n      <button\r\n        onClick={sendMessage}\r\n        style={{\r\n          padding: '10px 20px',\r\n          backgroundColor: '#4CAF50',\r\n          color: 'white',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Send Message\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}