{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  worker,\n  userId,\n  onClose\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleSend = async () => {\n    if (!message.trim()) return;\n    try {\n      await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          workerId: worker._id,\n          userId,\n          text: message\n        })\n      });\n      alert('Message sent');\n      setMessage('');\n    } catch (err) {\n      alert('Failed to send message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Chat with \", worker.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      placeholder: \"Type your message...\",\n      onChange: e => setMessage(e.target.value),\n      style: {\n        width: '70%',\n        padding: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      style: {\n        padding: '10px',\n        marginLeft: '10px'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      style: {\n        padding: '10px',\n        marginLeft: '10px',\n        backgroundColor: 'red',\n        color: 'white'\n      },\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Message","worker","userId","onClose","_s","message","setMessage","handleSend","trim","fetch","method","headers","body","JSON","stringify","workerId","_id","text","alert","err","style","padding","children","name","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","width","onClick","marginLeft","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Message = ({ worker, userId, onClose }) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    try {\r\n      await fetch('http://localhost:5000/api/messages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          workerId: worker._id,\r\n          userId,\r\n          text: message\r\n        })\r\n      });\r\n      alert('Message sent');\r\n      setMessage('');\r\n    } catch (err) {\r\n      alert('Failed to send message');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h3>Chat with {worker.name}</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        placeholder=\"Type your message...\"\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        style={{ width: '70%', padding: '10px' }}\r\n      />\r\n      <button onClick={handleSend} style={{ padding: '10px', marginLeft: '10px' }}>Send</button>\r\n      <button onClick={onClose} style={{ padding: '10px', marginLeft: '10px', backgroundColor: 'red', color: 'white' }}>Close</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC,EAAE;IAErB,IAAI;MACF,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAEd,MAAM,CAACe,GAAG;UACpBd,MAAM;UACNe,IAAI,EAAEZ;QACR,CAAC;MACH,CAAC,CAAC;MACFa,KAAK,CAAC,cAAc,CAAC;MACrBZ,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZD,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BvB,OAAA;MAAAuB,QAAA,GAAI,YAAU,EAACrB,MAAM,CAACsB,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChC5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,OAAQ;MACfyB,WAAW,EAAC,sBAAsB;MAClCC,QAAQ,EAAGC,CAAC,IAAK1B,UAAU,CAAC0B,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;MAC5CT,KAAK,EAAE;QAAEc,KAAK,EAAE,KAAK;QAAEb,OAAO,EAAE;MAAO;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF5B,OAAA;MAAQoC,OAAO,EAAE5B,UAAW;MAACa,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEe,UAAU,EAAE;MAAO,CAAE;MAAAd,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1F5B,OAAA;MAAQoC,OAAO,EAAEhC,OAAQ;MAACiB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEe,UAAU,EAAE,MAAM;QAAEC,eAAe,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAhB,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7H,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCIJ,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}