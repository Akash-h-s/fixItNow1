{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  selectedWorker\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.email) {\n      setUserEmail(user.email);\n    }\n  }, []);\n  const sendMessage = async () => {\n    if (!userEmail) {\n      alert('Missing sender email');\n      return;\n    }\n    if (!(selectedWorker !== null && selectedWorker !== void 0 && selectedWorker.email)) {\n      alert('Missing receiver email');\n      return;\n    }\n    if (!message.trim()) {\n      alert('Message is empty');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/messages/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          senderEmail: userEmail,\n          receiverEmail: selectedWorker.email,\n          content: message\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert('Message sent!');\n        setMessage('');\n      } else {\n        alert(data.error || 'Message failed');\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Error sending message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Send a Message to \", selectedWorker === null || selectedWorker === void 0 ? void 0 : selectedWorker.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message here...\",\n      style: {\n        width: '100%',\n        padding: '10px',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"fxqNdzAMv7NeZHD0WiSpdNB+4RA=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Message","selectedWorker","_s","message","setMessage","userEmail","setUserEmail","user","JSON","parse","localStorage","getItem","email","sendMessage","alert","trim","res","fetch","method","headers","body","stringify","senderEmail","receiverEmail","content","data","json","ok","error","err","console","children","fullName","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","style","width","padding","marginBottom","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Message = ({ selectedWorker }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.email) {\r\n      setUserEmail(user.email);\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    \r\n  if (!userEmail) {\r\n  alert('Missing sender email');\r\n  return;\r\n}\r\nif (!selectedWorker?.email) {\r\n  alert('Missing receiver email');\r\n  return;\r\n}\r\nif (!message.trim()) {\r\n  alert('Message is empty');\r\n  return;\r\n}\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/messages/send', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          senderEmail: userEmail,\r\n          receiverEmail: selectedWorker.email,\r\n          content: message,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        alert('Message sent!');\r\n        setMessage('');\r\n      } else {\r\n        alert(data.error || 'Message failed');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error sending message');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Send a Message to {selectedWorker?.fullName}</h3>\r\n      <textarea\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type your message here...\"\r\n        style={{ width: '100%', padding: '10px', marginBottom: '10px' }}\r\n      />\r\n      <button onClick={sendMessage}>Send Message</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}