{"ast":null,"code":"const handleFormSubmit = async e => {\n  e.preventDefault();\n\n  // Generate random distance and time\n  const distance = (Math.random() * (10 - 1) + 1).toFixed(1); // 1-10 km\n  const time = Math.floor(distance * 2 + Math.random() * 5); // estimated time\n\n  const bookingData = {\n    location: formData.location,\n    doorNumber: formData.doorNumber,\n    estimatedDistance: `${distance} km`,\n    arrivalTime: `${time} minutes`\n  };\n  try {\n    const res = await fetch(`http://localhost:5000/api/workers/${selectedWorker._id}/book`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bookingData)\n    });\n    if (res.ok) {\n      alert(`Booking confirmed!\\nWorker arrival in ${time} minutes.`);\n\n      // Set worker as unavailable\n      setWorkers(prev => prev.map(w => w._id === selectedWorker._id ? {\n        ...w,\n        available: false\n      } : w));\n\n      // Reset form\n      setSelectedWorker(null);\n      setFormData({\n        location: '',\n        doorNumber: ''\n      });\n\n      // Re-enable worker after 5 minutes\n      setTimeout(() => {\n        setWorkers(prev => prev.map(w => w._id === selectedWorker._id ? {\n          ...w,\n          available: true\n        } : w));\n      }, 5 * 60 * 1000);\n    } else {\n      alert('Booking failed!');\n    }\n  } catch (err) {\n    console.error('Error:', err);\n    alert('An error occurred during booking.');\n  }\n};","map":{"version":3,"names":["handleFormSubmit","e","preventDefault","distance","Math","random","toFixed","time","floor","bookingData","location","formData","doorNumber","estimatedDistance","arrivalTime","res","fetch","selectedWorker","_id","method","headers","body","JSON","stringify","ok","alert","setWorkers","prev","map","w","available","setSelectedWorker","setFormData","setTimeout","err","console","error"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/WorkersList.js"],"sourcesContent":["const handleFormSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Generate random distance and time\r\n  const distance = (Math.random() * (10 - 1) + 1).toFixed(1); // 1-10 km\r\n  const time = Math.floor(distance * 2 + Math.random() * 5); // estimated time\r\n\r\n  const bookingData = {\r\n    location: formData.location,\r\n    doorNumber: formData.doorNumber,\r\n    estimatedDistance: `${distance} km`,\r\n    arrivalTime: `${time} minutes`,\r\n  };\r\n\r\n  try {\r\n    const res = await fetch(`http://localhost:5000/api/workers/${selectedWorker._id}/book`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(bookingData),\r\n    });\r\n\r\n    if (res.ok) {\r\n      alert(`Booking confirmed!\\nWorker arrival in ${time} minutes.`);\r\n\r\n      // Set worker as unavailable\r\n      setWorkers((prev) =>\r\n        prev.map((w) => w._id === selectedWorker._id ? { ...w, available: false } : w)\r\n      );\r\n\r\n      // Reset form\r\n      setSelectedWorker(null);\r\n      setFormData({ location: '', doorNumber: '' });\r\n\r\n      // Re-enable worker after 5 minutes\r\n      setTimeout(() => {\r\n        setWorkers((prev) =>\r\n          prev.map((w) => w._id === selectedWorker._id ? { ...w, available: true } : w)\r\n        );\r\n      }, 5 * 60 * 1000);\r\n    } else {\r\n      alert('Booking failed!');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n    alert('An error occurred during booking.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,MAAOC,CAAC,IAAK;EACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,MAAMC,QAAQ,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMC,IAAI,GAAGH,IAAI,CAACI,KAAK,CAACL,QAAQ,GAAG,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE3D,MAAMI,WAAW,GAAG;IAClBC,QAAQ,EAAEC,QAAQ,CAACD,QAAQ;IAC3BE,UAAU,EAAED,QAAQ,CAACC,UAAU;IAC/BC,iBAAiB,EAAE,GAAGV,QAAQ,KAAK;IACnCW,WAAW,EAAE,GAAGP,IAAI;EACtB,CAAC;EAED,IAAI;IACF,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqCC,cAAc,CAACC,GAAG,OAAO,EAAE;MACtFC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,WAAW;IAClC,CAAC,CAAC;IAEF,IAAIM,GAAG,CAACS,EAAE,EAAE;MACVC,KAAK,CAAC,yCAAyClB,IAAI,WAAW,CAAC;;MAE/D;MACAmB,UAAU,CAAEC,IAAI,IACdA,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACX,GAAG,KAAKD,cAAc,CAACC,GAAG,GAAG;QAAE,GAAGW,CAAC;QAAEC,SAAS,EAAE;MAAM,CAAC,GAAGD,CAAC,CAC/E,CAAC;;MAED;MACAE,iBAAiB,CAAC,IAAI,CAAC;MACvBC,WAAW,CAAC;QAAEtB,QAAQ,EAAE,EAAE;QAAEE,UAAU,EAAE;MAAG,CAAC,CAAC;;MAE7C;MACAqB,UAAU,CAAC,MAAM;QACfP,UAAU,CAAEC,IAAI,IACdA,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACX,GAAG,KAAKD,cAAc,CAACC,GAAG,GAAG;UAAE,GAAGW,CAAC;UAAEC,SAAS,EAAE;QAAK,CAAC,GAAGD,CAAC,CAC9E,CAAC;MACH,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IACnB,CAAC,MAAM;MACLJ,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;IAC5BT,KAAK,CAAC,mCAAmC,CAAC;EAC5C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}