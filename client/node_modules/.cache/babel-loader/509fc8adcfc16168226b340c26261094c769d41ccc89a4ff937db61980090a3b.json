{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  workerId,\n  userId,\n  onClose\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const sendMessage = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          senderId: userId,\n          receiverId: workerId,\n          content: message\n        })\n      });\n      if (res.ok) {\n        alert('Message sent!');\n        onClose();\n      }\n    } catch (err) {\n      console.error('Message send error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#fff',\n      padding: 20,\n      borderRadius: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      style: {\n        width: '100%',\n        marginBottom: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        marginRight: 10\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Message","workerId","userId","onClose","_s","message","setMessage","sendMessage","res","fetch","method","headers","body","JSON","stringify","senderId","receiverId","content","ok","alert","err","console","error","style","background","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","e","target","width","marginBottom","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Message = ({ workerId, userId, onClose }) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/messages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ senderId: userId, receiverId: workerId, content: message })\r\n      });\r\n      if (res.ok) {\r\n        alert('Message sent!');\r\n        onClose();\r\n      }\r\n    } catch (err) {\r\n      console.error('Message send error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: '#fff', padding: 20, borderRadius: 8 }}>\r\n      <h3>Send Message</h3>\r\n      <textarea\r\n        rows=\"4\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        style={{ width: '100%', marginBottom: 10 }}\r\n      />\r\n      <button onClick={sendMessage} style={{ marginRight: 10 }}>Send</button>\r\n      <button onClick={onClose}>Cancel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAEb,MAAM;UAAEc,UAAU,EAAEf,QAAQ;UAAEgB,OAAO,EAAEZ;QAAQ,CAAC;MACnF,CAAC,CAAC;MACF,IAAIG,GAAG,CAACU,EAAE,EAAE;QACVC,KAAK,CAAC,eAAe,CAAC;QACtBhB,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAC3C;EACF,CAAC;EAED,oBACErB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,OAAO,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC/D5B,OAAA;MAAA4B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhC,OAAA;MACEiC,IAAI,EAAC,GAAG;MACRC,KAAK,EAAE5B,OAAQ;MACf6B,QAAQ,EAAGC,CAAC,IAAK7B,UAAU,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CV,KAAK,EAAE;QAAEc,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAG;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFhC,OAAA;MAAQwC,OAAO,EAAEhC,WAAY;MAACgB,KAAK,EAAE;QAAEiB,WAAW,EAAE;MAAG,CAAE;MAAAb,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvEhC,OAAA;MAAQwC,OAAO,EAAEpC,OAAQ;MAAAwB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAhCIJ,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}