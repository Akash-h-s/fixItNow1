{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\OneDrive\\\\Desktop\\\\practicemern\\\\mern-auth-project\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('Message component props:', {\n  senderId,\n  receiverId\n});\nconst Message = ({\n  senderId,\n  receiverId,\n  onClose\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [status, setStatus] = useState('');\n  const sendMessage = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/messages', {\n        senderId,\n        receiverId,\n        content\n      });\n      setStatus('Message sent!');\n      setContent('');\n    } catch (error) {\n      var _error$response;\n      console.error('Failed to send message:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setStatus('Failed to send message.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Type your message...\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"6p2WC9FCYQfuVem+sDxhmNHfIKM=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","console","log","senderId","receiverId","Message","onClose","_s","content","setContent","status","setStatus","sendMessage","response","post","error","_error$response","data","message","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/akash/OneDrive/Desktop/practicemern/mern-auth-project/client/src/components/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nconsole.log('Message component props:', { senderId, receiverId });\r\n\r\nconst Message = ({ senderId, receiverId, onClose }) => {\r\n  const [content, setContent] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/messages', {\r\n        senderId,\r\n        receiverId,\r\n        content,\r\n      });\r\n\r\n      setStatus('Message sent!');\r\n      setContent('');\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error.response?.data || error.message);\r\n      setStatus('Failed to send message.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-popup\">\r\n      <textarea\r\n        placeholder=\"Type your message...\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <button onClick={onClose}>Close</button>\r\n      <p>{status}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE;EAAEC,QAAQ;EAAEC;AAAW,CAAC,CAAC;AAEjE,MAAMC,OAAO,GAAGA,CAAC;EAAEF,QAAQ;EAAEC,UAAU;EAAEE;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,oCAAoC,EAAE;QACtEX,QAAQ;QACRC,UAAU;QACVI;MACF,CAAC,CAAC;MAEFG,SAAS,CAAC,eAAe,CAAC;MAC1BF,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOM,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdf,OAAO,CAACc,KAAK,CAAC,yBAAyB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIF,KAAK,CAACG,OAAO,CAAC;MAC/EP,SAAS,CAAC,yBAAyB,CAAC;IACtC;EACF,CAAC;EAED,oBACEX,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BpB,OAAA;MACEqB,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEd,OAAQ;MACfe,QAAQ,EAAGC,CAAC,IAAKf,UAAU,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAElB,WAAY;MAAAQ,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3C7B,OAAA;MAAQ8B,OAAO,EAAExB,OAAQ;MAAAc,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxC7B,OAAA;MAAAoB,QAAA,EAAIV;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhCIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}